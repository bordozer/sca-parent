buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.9"
    }
}

apply plugin: 'java'
apply plugin: 'maven'

ext {
    spotbugsVersion = '3.1.8'
    lombockVersion = '1.18.4'
    junit5Version = '5.3.1'
    mockitoVersion = '2.23.0'
    junitPlatformLauncherVersion = '1.3.1'
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

def unpackScaConfiguration(scaModule) {
    return tasks.create("${scaModule}UnpackConfiguration", Copy) {
        from(zipTree(project.buildscript.configurations.classpath.resolvedConfiguration.resolvedArtifacts
                .find {artifact -> artifact.name == 'parent'}.file))
        into(buildDir)
        include "sca/${scaModule}/**"
    }
}

dependencies {
    compile group: 'com.github.spotbugs', name: 'spotbugs', version: spotbugsVersion
    compileOnly group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: spotbugsVersion
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compileOnly  group: 'net.jcip', name: 'jcip-annotations', version: '1.0'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
    compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'

    compile group: 'org.projectlombok', name: 'lombok', version: lombockVersion

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit5Version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junit5Version
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitPlatformLauncherVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
}

/* <CHECKSTYLE> */
apply plugin: 'checkstyle'

checkstyle {
    ignoreFailures = false
    configFile = file("${buildDir}/sca/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": file("${buildDir}/sca/checkstyle/checkstyle-exclude.xml")]
    maxWarnings = 0
    showViolations = true
    toolVersion ="8.16"
}

tasks.withType(Checkstyle) { task ->
    reports {
        html.enabled = true
        xml.enabled = false
    }
    enabled = false
}

def unpackCheckstyleConfigurationTask = unpackScaConfiguration('checkstyle')
[checkstyleMain, checkstyleTest].each {
    it.dependsOn unpackCheckstyleConfigurationTask
}
/* </CHECKSTYLE> */

/* <PMD> */
apply plugin: "pmd"

pmd {
    ignoreFailures = false
    pmdTest.enabled = false
    ruleSetFiles = files("${buildDir}/sca/pmd/pmd-ruleset.xml")
    ruleSets = []
    consoleOutput = true
    toolVersion ="6.10.0"
}

tasks.withType(Pmd) { task ->
    reports {
        html.enabled = true
        xml.enabled = false
    }
    enabled = false
}

def unpackPmdConfigurationTask = unpackScaConfiguration('pmd')
[pmdMain, pmdTest].each {
    it.dependsOn unpackPmdConfigurationTask
}
/* </PMD> */

/* <SPOTBUGS> */
apply plugin: com.github.spotbugs.SpotBugsPlugin

spotbugs  {
    toolVersion = '3.1.8'
    ignoreFailures = false
    spotbugsTest.enabled = false
    effort 'max'
    reportLevel = "low"
    excludeFilter = file("${buildDir}/sca/spotbugs/excludeFilter.xml")
}

tasks.withType(com.github.spotbugs.SpotBugsTask) { task ->
    reports {
        xml.enabled = false
        html.enabled = true
    }
    enabled = false
}

def unpackSpotbugsConfigurationTask = unpackScaConfiguration('spotbugs')
[spotbugsMain, spotbugsTest].each {
    it.dependsOn unpackSpotbugsConfigurationTask
}
/* </SPOTBUGS> */